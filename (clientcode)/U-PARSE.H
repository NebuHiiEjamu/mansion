// Script Pre Parser.c
//

typedef struct {
	char	*resWord;
	short	type;
	short	arg;
	short	nbrArgs;
} ResWordTable;

// data types
enum	{	DT_SYMBOL,	ST_LONGLITERAL, ST_STRINGLITERAL, ST_OPERATOR, ST_COMMAND, ST_FUNCTION};

// operator types
enum	{	OT_EQUALITY, OT_ADDITION, OT_SUBTRACTION, OT_MULTIPLICATION,
			OT_DIVISION, OT_LESSEQUAL, OT_GREATEREQUAL, OT_LESS, OT_GREATER,
			OT_STRINGCONCAT, OT_NOT, OT_NOTEQUAL, OT_NbrOperators};

// function types
enum	{	FT_ISLOCKED,		FT_NbrFunctions};

// Command Types
enum	{	CT_EXEC,	CT_ALARMEXEC, CT_IF, CT_IFELSE, CT_WHILE,
			CT_ASSIGNMENT,	
			CT_NbrCommands};

// Special Treatment:
// # ; comments
// {   } brackets delimit atom lists
// 0-9 or -0=9  numbers
// " string literals
//
// Symbols begin with letter and contain letters, numbers and/or underscore
//
ResWordTable	gResWordTable[] =
{
	"==",			ST_OPERATOR,	OT_EQUALITY,		2,
	"=",			ST_FUNCTION,	CT_ASSIGNMENT,		2,
	"+",			ST_OPERATOR,	OT_ADDITION,		2,
	"-",			ST_OPERATOR,	OT_SUBTRACTION,		2,
	"*",			ST_OPERATOR,	OT_MULTIPLICATION,	2,
	"/",			ST_OPERATOR,	OT_DIVISION,		2,
	"<=",			ST_OPERATOR,	OT_LESSEQUAL,		2,
	">=",			ST_OPERATOR,	OT_GREATEREQUAL,	2,
	"<",			ST_OPERATOR,	OT_LESS,			2,
	">",			ST_OPERATOR,	OT_GREATER,			2,
	"&",			ST_OPERATOR,	OT_STRINGCONCAT,	2,
	"!",			ST_OPERATOR,	OT_NOT,				1,
	"NOT",			ST_OPERATOR,	OT_NOT,				1,
	"<>",			ST_OPERATOR,	OT_NOTEQUAL,		2,
	"!=",			ST_OPERATOR,	OT_NOTEQUAL,		2,
	// Generic commands
	"GLOBAL",		ST_COMMAND,		CT_GLOBAL,			1,
	"DEF",			ST_COMMAND,		CT_DEF,				2,
	"EXEC",			ST_COMMAND,		CT_EXEC,			1,
	"ALARMEXEC",	ST_COMMAND,		CT_ALARMEXEC,		2,
	"IF",			ST_COMMAND,		CT_IF,				2,
	"IFELSE",		ST_COMMAND,		CT_IFELSE,			3,
	"WHILE",		ST_COMMAND,		CT_WHILE,			2,
	"LAUNCHAPP",	ST_COMMAND,		CT_LAUNCHAPP,		1,
	"SHELLCMD",		ST_COMMAND,		CT_SHELLCMD,		1,

	// Palace specific commands
	"GOTOROOM",		ST_COMMAND,		CT_GOTOROOM,		1,
	"LOCK",			ST_COMMAND,		CT_LOCK,			1,
	"SETPICLOC",	ST_COMMAND,		CT_SETPICLOC,		3,
	"SETLOC",		ST_COMMAND,		CT_SETLOC,			3,
	"SETSPOTSTATE",	ST_COMMAND,		CT_SETSPOTSTATE,	2,
	"SETSPOTSTATELOCAL", ST_COMMAND, CT_SETSPOTSTATELOCAL, 2,
	"SETALARM",		ST_COMMAND,		CT_SETALARM,		2,
	"GETSPOTSTATE",	ST_COMMAND,		CT_GETSPOTSTATE,	1,
	"ADDLOOSEPROP",	ST_COMMAND,		CT_ADDLOOSEPROP,	3,
	"DOFFPROP",		ST_COMMAND,		CT_DOFFPROP,		0,
	"DONPROP",		ST_COMMAND,		CT_DONPROP,			1,
	"REMOVEPROP",	ST_COMMAND,		CT_REMOVEPROP,		1,
	"CLEARPROPS",	ST_COMMAND,		CT_NAKED,			0,
	"NAKED",		ST_COMMAND,		CT_NAKED,			0,
	"SETCOLOR",		ST_COMMAND,		CT_SETCOLOR,		1,
	"SETFACE",		ST_COMMAND,		CT_SETFACE,			1,
	"UNLOCK",		ST_COMMAND,		CT_UNLOCK,			1,
	"GLOBALMSG",	ST_COMMAND,		CT_GLOBALMSG,		1,
	"ROOMMSG",		ST_COMMAND,		CT_ROOMMSG,			1,
	"SUSRMSG",		ST_COMMAND,		CT_SUSRMSG,			1,
	"LOCALMSG",		ST_COMMAND,		CT_LOCALMSG,		1,
	"LOGMSG",		ST_COMMAND,		CT_LOGMSG,			1,
	"SAY",			ST_COMMAND,		CT_SAY,				1,
	"CHAT",			ST_COMMAND,		CT_SAY,				1,
	"DELAY",		ST_COMMAND,		CT_DELAY,			1,
	"KILLUSER",		ST_COMMAND,		CT_KILLUSER,		1,
	"GOTOURL",		ST_COMMAND,		CT_GOTOURL,			1,
	"NETGOTO",		ST_COMMAND,		CT_GOTOURL,			1,
	"MACRO",		ST_COMMAND,		CT_MACRO,			1,
	"MOVE",			ST_COMMAND,		CT_MOVE,			2,
	"SETPOS",		ST_COMMAND,		CT_SETPOS,			2,
		
	// FUNCTIONS
	"RANDOM",		ST_FUNCTION,	FT_RANDOM,			1,
	"ISLOCKED",		ST_FUNCTION,	FT_ISLOCKED,		1,
	"SUBSTR",		ST_FUNCTION,	FT_SUBSTR,			2,
	"GREPSTR",		ST_FUNCTION,	FT_GREPSTR,			2,
	"GREPSUB",		ST_FUNCTION,	FT_GREPSUB,			1,
	"DEST",			ST_FUNCTION,	FT_DEST,			0,
	"ME",			ST_FUNCTION,	FT_ME,				0,
	"INSPOT",		ST_FUNCTION,	FT_INSPOT,			1,
	"ITOA",			ST_FUNCTION,	FT_ITOA,			1,

}
